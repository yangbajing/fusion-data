akka {
  actor {
    provider = cluster
  }

  remote {
    artery {
      enabled = on
      //canonical.hostname = "127.0.0.1"
      //canonical.port = 30011
    }
  }

  //extensions += "akka.cluster.metrics.ClusterMetricsExtension"
  coordinated-shutdown.terminate-actor-system = on

  cluster {
    //use-dispatcher = cluster-dispatcher
    shutdown-after-unsuccessful-join-seed-nodes = 20s
    //roles = ["broker"]
    //seeds = ["127.0.0.1:30011"]
    //use-dispatcher = cluster-dispatcher
    //metrics.native-library-extract-folder = ${user.dir}/target/native
  }
}

cluster-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-max = 4
  }
}

fusion.jdbc.default {
  poolName = "pg-primary"
  jdbcUrl = "jdbc:postgresql://127.0.0.1:5432/massdata?reWriteBatchedInserts=true&targetServerType=master"
  username = "massdata"
  password = "Massdata.2018"
  connectionTestQuery = "select 1;"
  maximumPoolSize = 2
  allowPrintLog = true
  # 以下是 slick 配置参数
  numThreads = 2
}
fusion.inject {
  modules.enabled += mass.core.module.MassCoreModule
}

mass {
  core.persistence {
  }

  job {
    job-saved-dir = "/tmp/mass/job/job-saved"
  }

  cluster {
    protocol = "akka"
    seeds = []
  }

}
